import React, { useState } from 'react';
import { useRouter } from 'next/router';
import Head from 'next/head';
import axios from 'axios';
import { authUrl } from '../const/auth';
import styles from '../styles/Home.module.css';

const Home = () => {
  const [accessToken, setAccessToken] = useState(null);
  const [genres, setGenres] = useState(null);
  const [relatedArtists, setRelatedArtists] = useState(null);

  const getGenres = async artist => {
    const response = await axios.get(
      `https://api.spotify.com/v1/search?q=${artist}&type=artist`,
      {
        headers: {
          Authorization: `Bearer ${accessToken}`
        }
      }
    );

    if (response && response.status === 200) {
      setGenres(response.data.artists.items[0].genres);
    }
  };
  console.log({ accessToken });
  const getAccessToken = async () => {
    // set base url somewhere
    axios.get('http://localhost:3000/api/getClientToken').then(({ data }) => {
      setAccessToken(data.accessToken);
      console.log({ data });
    });
  };

  const getRelatedArtists = async genre => {
    const response = await axios({
      method: 'get',
      url: `https://api.spotify.com/v1/search?q=genre:%22${genre}%22&type=artist`,
      headers: {
        Authorization: `Bearer ${accessToken}`
      }
    });

    if (response && response.status === 200) {
      setRelatedArtists(response.data.artists.items);
    }
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>Sups</h1>
        <form
          onSubmit={async e => {
            e.preventDefault();

            const form = new FormData(e.target);
            const artist = form.get('artist');

            if (!accessToken) {
              await getAccessToken();
            }

            await getGenres(artist);
          }}
        >
          <input name='artist' type='text' defaultValue='beyonce' />
          <button type='submit'>search</button>
        </form>
        <ul>
          {genres &&
            genres.length &&
            genres.map(genre => (
              <li>
                <button type='button' onClick={() => getRelatedArtists(genre)}>
                  {genre}
                </button>
              </li>
            ))}
        </ul>
        <ul>
          {relatedArtists &&
            relatedArtists.map(artist => <li>{artist.name}</li>)}
          <button
            type='button'
            onClick={() => {
              window.location.href = authUrl('123');
            }}
          >
            create playlist
          </button>
        </ul>
      </main>

      <footer className={styles.footer}>
        <h2>Floop</h2>
      </footer>
    </div>
  );
};

export default Home;
